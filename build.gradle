import org.spongepowered.gradle.plugin.config.PluginLoaders
import org.spongepowered.plugin.metadata.model.PluginDependency

plugins {
    id "java-library"
    id("org.spongepowered.gradle.plugin") version '2.0.2'
}

compileJava.options.encoding = 'UTF-8'

group = 'org.essentialss'
version = '0.0.9'
description = 'One stop ship for all essential tools'

repositories {
    mavenCentral()
    maven {
        name = 'sponge-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sponge {
    apiVersion('8.1.0')
    license('All Rights Reserved')
    loader {
        name(PluginLoaders.JAVA_PLAIN)
        version("1.0")
    }
    plugin('essentials-s') {
        displayName('EssentialsS')
        entrypoint('org.essentialss.EssentialsSMain')
        description('One stop ship for all essential tools')
        dependency('spongeapi') {
            loadOrder(PluginDependency.LoadOrder.AFTER)
            optional(false)
        }
    }
}

dependencies {
    try {
        implementation project(':api')
    }catch(UnknownProjectException ignored){
        System.out.println("Could not find sub-module of API, using jitpack instead")
        implementation 'com.github.EssentialsS:API:bleeding-SNAPSHOT'
    }
    implementation("com.github.mosemister:DataProperties:1.0.3")

    testImplementation("org.mockito:mockito-core:5.2.0")
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.1")

}

test {
    useJUnitPlatform()
}